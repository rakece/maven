<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang" xmlns:security="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd     http://www.springframework.org/schema/aop       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd      http://www.springframework.org/schema/tx       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd         http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context-4.1.xsd         http://www.springframework.org/schema/jee       http://www.springframework.org/schema/jee/spring-jee-4.1.xsd          http://www.springframework.org/schema/lang      http://www.springframework.org/schema/lang/spring-lang-4.1.xsd      http://www.springframework.org/schema/security       http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    	




	
    <!-- ******************************************************************** -->
    	
    <!-- Scan for dao layer annotated beans -->
    	
    <!-- ******************************************************************** -->
    	
    <context:component-scan base-package="com.kirusa.dao" scoped-proxy="interfaces"/>
    	
	
    <!-- ******************************************************************** -->
    	
    <!-- Mark bean transactions as annotation driven -->
    	
    <!-- ******************************************************************** -->
    	
    <tx:annotation-driven transaction-manager="transactionManager"/>
    	
	
    <!-- ******************************************************************** -->
    	
    <!-- PropertyConfigurer for the DAO -->
    	
    <!-- ******************************************************************** -->
    	
    <context:property-placeholder location="classpath:rcsbotdirectory-dao.properties"/>
    		
	
	
    <!-- ******************************************************************** -->
    	
    <!-- Setup the transaction manager -->
    	
    <!-- ******************************************************************** -->
    		
    <!-- Using Atomikos Transaction Manager -->
    
    <!-- Configure the Spring framework to use JTA transactions from Atomikos -->
    		
    <bean class="com.atomikos.icatch.jta.UserTransactionManager" destroy-method="close" id="atomikosTransactionManager" init-method="init">
        			
        <property name="forceShutdown" value="true"/>
        			
        <property name="startupTransactionService" value="true"/>
        			
        <property name="transactionTimeout" value="60"/>
        		
    </bean>
    <bean class="com.atomikos.icatch.jta.UserTransactionImp" id="atomikosUserTransaction"/>
    <bean class="org.springframework.transaction.jta.JtaTransactionManager" id="transactionManager">
        			
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        			
        <property name="userTransaction" ref="atomikosUserTransaction"/>
        			
        <property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION"/>
        		
    </bean>
    	
 	
    <!-- ******************************************************************** -->
    	
    <!-- Setup a data source -->
    	
    <!-- ******************************************************************** -->
    	
    <!-- Using Apache DBCP Data Sources -->
    				
    <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" name="com_mysql_cj_jdbc_DriverDS">
        					
        <property name="driverClassName" value="${com_mysql_cj_jdbc_Driver.connection.driver_class}"/>
        					
        <property name="username" value="${com_mysql_cj_jdbc_Driver.connection.username}"/>
        					
        <property name="password" value="${com_mysql_cj_jdbc_Driver.connection.password}"/>
        					
        <property name="url" value="${com_mysql_cj_jdbc_Driver.connection.url}"/>
        					
        <property name="maxIdle" value="${com_mysql_cj_jdbc_Driver.minPoolSize}"/>
        					
        <property name="maxActive" value="${com_mysql_cj_jdbc_Driver.maxPoolSize}"/>
        				
    </bean>
    		
	
	
	
    <!-- ******************************************************************** -->
    	
    <!-- Setup each persistence unit -->
    	
    <!-- ******************************************************************** -->
    	
				
    <!-- Configure a JPA vendor adapter -->
    				
    <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" id="com_mysql_cj_jdbc_DriverJPAVendorAdapter">
        					
        <property name="showSql" value="${com_mysql_cj_jdbc_Driver.show_sql}"/>
        					
        <property name="generateDdl" value="${com_mysql_cj_jdbc_Driver.generateDdl}"/>
        					
        <property name="databasePlatform" value="${com_mysql_cj_jdbc_Driver.dialect}"/>
        				
    </bean>
    				
    <!-- EntityManager Factory that brings together the persistence unit, datasource, and JPA Vendor -->
    				
    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="com_mysql_cj_jdbc_Driver">
        					
        <property name="dataSource" ref="com_mysql_cj_jdbc_DriverDS"/>
        					
        <property name="persistenceUnitName" value="com_mysql_cj_jdbc_Driver"/>
        					
        <property name="jpaVendorAdapter" ref="com_mysql_cj_jdbc_DriverJPAVendorAdapter"/>
        						
        <property name="jpaPropertyMap">
            							
            <map>
                										
                <entry key="hibernate.transaction.manager_lookup_class" value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup"/>
                										
                <entry key="hibernate.connection.release_mode" value="on_close"/>
                							
            </map>
            						
        </property>
        				
    </bean>
    	
		
		

</beans>
